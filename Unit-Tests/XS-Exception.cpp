/*******************************************************************************
 * Copyright (c) 2015, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/*!
 * @file        XS-Exception.cpp
 * @copyright   (c) 2015 - Jean-David Gadina - www.xs-labs.com
 * @brief       Test case XS::Exception
 */

#include <XS-C++.h>
#include <GoogleMock/GoogleMock.h>

using namespace testing;

static void __throw( void );
static void __throw( void )
{
    XS::Exception e( "Test exception", 42 );
    
    throw e;
}

TEST( XS_Exception, ThrowCatchXSException )
{
    ASSERT_THROW( __throw(), XS::Exception );
}

TEST( XS_Exception, OStream )
{
    char                 buf[ 128 ];
    std::stringstream    ss;
    std::string          what;
    XS::Exception        e( "Test exception", 42 );
    
    what = "Exception code: "
         + std::to_string( e.GetCode() )
         + " - "
         + e.GetReason();
    
    ss << e;
    
    ss.get( buf, sizeof( buf ) );
    
    ASSERT_EQ( what, std::string( buf ) );
}
